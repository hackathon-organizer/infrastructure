version: '3.1'

services:
  ho-rabbitmq3:
      container_name: "ho-rabbitmq"
      image: rabbitmq:3.10.7-management-alpine
      environment:
          - RABBITMQ_DEFAULT_USER=guest
          - RABBITMQ_DEFAULT_PASS=guest
      ports:
          - '5672:5672'
          - '15672:15672'
      volumes:
        - ./dev/configs/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
        - ./dev/configs/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro

  ho-keycloak:
    container_name: ho-keycloak
    image: quay.io/keycloak/keycloak:20.0.5
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KK_TO_RMQ_URL=ho-rabbitmq
      - KK_TO_RMQ_PORT=5672
      - KK_TO_RMQ_USERNAME=guest
      - KK_TO_RMQ_PASSWORD=guest
      - KK_TO_RMQ_VHOST=/
      - KEYCLOAK_IMPORT=/tmp/realm-export.json
    volumes:
      - ./dev/resources/keycloak-to-rabbit-3.0.2.jar:/opt/keycloak/providers/keycloak-to-rabbit-3.0.2.jar
      - ./dev/configs/keycloak/realm-export.json:/tmp/realm-export.json
      - ./dev/configs/keycloak/themes/ho-theme:/opt/keycloak/themes/ho-theme
    command: start-dev
  
  ho-vault:
    container_name: ho-vault
    image: vault:1.12.0
    ports:
      - "8200:8200"
    restart: always
    environment: 
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
    volumes:
      - ./dev/configs/vault/volumes/logs:/vault/logs
      - ./dev/configs/vault/volumes/file:/vault/file
      - ./dev/configs/vault/volumes/config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json

  ho-config-server:
    container_name: ho-config-server
    image: config-server:1.0
    ports:
      - 8888:8888
    environment:
      - VAULT_HOST=ho-vault
      - VAULT_PORT=8200
      - VAULT_TOKEN=hvs.ZZqcl357guUzC92VOuJFYLqn
    restart: always 

  ho-api-gateway:
    container_name: ho-api-gateway
    image: api-gateway:1.0  
    ports:
      - 9090:9090
    environment:
      - CONFIG_SERVER_HOST=ho-config-server
      - CONFIG_SERVER_PORT=8888
    restart: always
    depends_on:
      - ho-discovery-service
      - ho-config-server     

  ho-discovery-service:
    container_name: ho-discovery-service
    image: discovery-service:1.0
    environment:
      - CONFIG_SERVER_HOST=ho-config-server
      - CONFIG_SERVER_PORT=8888
    ports:
      - 8761:8761
    restart: always

  ho-postgresql-hackathon-master:
    image: docker.io/bitnami/postgresql:14
    ports:
      - '5434:5432'
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=qwerty
      - POSTGRESQL_DATABASE=hackathon_db

  ho-postgresql-user-master:
    image: docker.io/bitnami/postgresql:14
    ports:
      - '5432:5432'
    volumes:
      - postgresql_master_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=qwerty
      - POSTGRESQL_DATABASE=user_db
      - ALLOW_EMPTY_PASSWORD=yes

  ho-postgresql-messaging-master:
    image: docker.io/bitnami/postgresql:14
    ports:
      - '5435:5432'
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=qwerty
      - POSTGRESQL_DATABASE=messaging_db
    restart: always

  ho-media-server:
    image: openvidu/openvidu-dev:2.26.0
    ports:
      - '4443:4443'
    environment:
      - OPENVIDU_SECRET=secret
    restart: always

  ho-messaging-service:
    container_name: ho-messaging-service
    image: messaging-service:1.0
    environment:
      - CONFIG_SERVER_HOST=ho-config-server
      - CONFIG_SERVER_PORT=8888
    depends_on:
      - ho-discovery-service
      - ho-config-server
    restart: always

  ho-hackathon-write-service:
    image: hackathon-write-service:1.0
    environment:
      - CONFIG_SERVER_HOST=ho-config-server
      - CONFIG_SERVER_PORT=8888
    restart: always  
    depends_on:
      - ho-discovery-service
      - ho-config-server
    volumes:
      - ./dev/var/files:/var/files

  ho-hackathon-read-service:
    image: hackathon-read-service:1.0
    environment:
      - CONFIG_SERVER_HOST=ho-config-server
      - CONFIG_SERVER_PORT=8888  
    restart: always
    depends_on:
      - ho-discovery-service
      - ho-config-server  
    volumes:
      - ./dev/var/files:/var/files

  ho-user-write-service:
    image: user-write-service:1.0
    environment:
      - CONFIG_SERVER_HOST=ho-config-server
      - CONFIG_SERVER_PORT=8888 
    restart: always
    depends_on:
      - ho-discovery-service
      - ho-config-server

  ho-user-read-service:
    image: user-read-service:1.0
    environment:
      - CONFIG_SERVER_HOST=ho-config-server
      - CONFIG_SERVER_PORT=8888
    restart: always 
    depends_on:
      - ho-discovery-service
      - ho-config-server

volumes:
  postgresql_master_data:
    driver: local
